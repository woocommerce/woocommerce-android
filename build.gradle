buildscript {
    ext.kotlinVersion = '1.3.60'
    ext.navigationVersion = '2.2.1'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.automattic.android:fetchstyle:1.1'
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"
    }
}

apply plugin: 'com.automattic.android.fetchstyle'

allprojects {
    apply plugin: 'checkstyle'

    repositories {
        google()
        jcenter()
        maven {
            url 'http://www.idescout.com/maven/repo/'
        }
    }

    task checkstyle(type: Checkstyle) {
        source 'src'

        classpath = files()
    }

    checkstyle {
        toolVersion = '8.3'
        configFile file("${project.rootDir}/config/checkstyle.xml")
    }
}

subprojects {
    configurations {
        ktlint
        compile.exclude group: 'org.jetbrains' , module:'annotations-java5'
    }

    dependencies {
        ktlint 'com.github.shyiko:ktlint:0.29.0'
    }

    task ktlint(type: JavaExec) {
        main = "com.github.shyiko.ktlint.Main"
        classpath = configurations.ktlint
        args "src/**/*.kt"
    }

    task ktlintFormat(type: JavaExec) {
        main = "com.github.shyiko.ktlint.Main"
        classpath = configurations.ktlint
        args "-F", "src/**/*.kt"
    }

    task ciktlint(type: JavaExec) {
        main = "com.github.shyiko.ktlint.Main"
        classpath = configurations.ktlint
        args "src/**/*.kt", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * Copies git-hooks from the `tools/team-props/git-hooks' directory to the `.git/hooks` folder
 * at the root of this project.
 */
task installGitHooks(type: Copy) {
    println "Copying git-hooks scripts from tools/team-props/git-hooks to .git/hooks"
    from new File(rootProject.rootDir, 'tools/team-props/git-hooks')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777
}

ext {
    fluxCVersion = '1.6.11'
    daggerVersion = '2.25.2'
    glideVersion = '4.10.0'
    testRunnerVersion = '1.0.1'
    espressoVersion = '3.0.1'
    mockitoKotlinVersion = '2.1.0'
    mockitoVersion = '2.28.2'
    constraintLayoutVersion = '1.1.0'
    multidexVersion = '1.0.3'
    libaddressinputVersion = '0.0.2'
    eventBusVersion = '3.1.1'
    googlePlayCoreVersion = '1.6.4'
    coroutinesVersion = '1.3.6'
    archComponentsVersion = '2.2.0'
    assertjVersion = '3.11.1'
    aztecVersion = 'v1.3.40'
}

tasks.getByPath('WooCommerce:preBuild').dependsOn installGitHooks
