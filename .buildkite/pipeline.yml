# Nodes with values to reuse in the pipeline.
common_params:
  # Common plugin settings to use with the `plugins` key.
  - &ci_toolkit
    automattic/a8c-ci-toolkit#1028a3092f171d034857a97c77e56d93b0b30a8e
  - &test_collector
    test-collector#v1.10.0
  - &test_collector_common_params
      files: "WooCommerce/build/buildkite-test-analytics/*.xml"
      format: "junit"

agents:
  queue: "android"

env:
  GRADLE_PROJECT_PREFIX: "WOOCOMMERCE_"

steps:
  - label: "Gradle Wrapper Validation"
    command: |
      validate_gradle_wrapper
    plugins: [*ci_toolkit]

  # Wait for Gradle Wrapper to be validated before running any other jobs
  - wait

  - label: "Build"
    command: |
      echo "--- ‚öíÔ∏è Building"
      cp gradle.properties-example gradle.properties
      ./gradlew :WooCommerce:dependencies --scan
    plugins: [*ci_toolkit]

#  - label: "‚ò¢Ô∏è Danger - PR Check"
#    command: danger
#    key: danger
#    if: "build.pull_request.id != null"
#    retry:
#      manual:
#        permit_on_passed: true
#    agents:
#      queue: "linter"
#
#  - label: "detekt"
#    command: |
#      echo "--- üßπ Linting"
#      cp gradle.properties-example gradle.properties
#      ./gradlew detektAll
#    plugins: [*ci_toolkit]
#    artifact_paths:
#      - "**/build/reports/detekt/detekt.html"
#
#  - label: "lint"
#    command: |
#      echo "--- üßπ Linting"
#      cp gradle.properties-example gradle.properties
#      ./gradlew lintJalapenoDebug
#    plugins: [*ci_toolkit]
#    artifact_paths:
#      - "**/build/reports/lint-results*.*"
#
#  - label: "Dependency Tree Diff"
#    command: |
#      cp gradle.properties-example gradle.properties
#      .buildkite/commands/dependency-tree-diff.sh
#    if: build.pull_request.id != null
#    plugins: [*ci_toolkit]
#
#  - label: "Unit tests"
#    command: .buildkite/commands/run-unit-tests.sh
#    plugins:
#      - *ci_toolkit
#      - *test_collector :
#          <<: *test_collector_common_params
#          api-token-env-name: "BUILDKITE_ANALYTICS_TOKEN_UNIT_TESTS"
#    artifact_paths:
#      - "**/build/test-results/*/*.xml"
#
#  - label: "Ensure Screenshot Tests Build"
#    command: |
#      echo "--- ‚öíÔ∏è Building"
#      cp gradle.properties-example gradle.properties
#      ./gradlew assembleJalapenoDebugAndroidTest
#    plugins: [*ci_toolkit]
#
#  - label: "üõ† Prototype Build"
#    command: ".buildkite/commands/prototype-build.sh"
#    if: build.pull_request.id != null
#    plugins: [*ci_toolkit]
#
#  - label: "Instrumented tests"
#    command: .buildkite/commands/run-instrumented-tests.sh
#    plugins:
#      - *ci_toolkit
#      - *test_collector :
#          <<: *test_collector_common_params
#          api-token-env-name: "BUILDKITE_ANALYTICS_TOKEN_INSTRUMENTED_TESTS"
#    artifact_paths:
#      - "**/build/instrumented-tests/**/*"
