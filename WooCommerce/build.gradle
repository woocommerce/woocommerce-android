buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.google.gms:google-services:3.2.0'
        classpath 'se.bjurr.violations:violation-comments-to-github-gradle-plugin:1.51'
        classpath 'io.sentry:sentry-android-gradle-plugin:1.7.28'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-allopen'
apply plugin: 'se.bjurr.violations.violation-comments-to-github-gradle-plugin'
apply plugin: 'io.sentry.android.gradle'
apply plugin: 'androidx.navigation.safeargs.kotlin'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url 'https://zendesk.jfrog.io/zendesk/repo' }
    maven { url 'https://a8c-libs.s3.amazonaws.com/android' }
}

allOpen {
    annotation("com.woocommerce.android.annotations.OpenClass")
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.0'

    defaultConfig {
        applicationId "com.woocommerce.android"
        // Allow versionName to be overridden with property. e.g. -PversionName=1234
        if (project.hasProperty("versionName")) {
            versionName project.property("versionName")
        } else {
            versionName "6.6-rc-1"
        }
        versionCode 215

        minSdkVersion 21
        targetSdkVersion 30

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner 'com.woocommerce.android.WooCommerceTestRunner'
        // TODO remove this once the hilt migration is complete
        javaCompileOptions.annotationProcessorOptions.arguments['dagger.hilt.disableModulesHaveInstallInCheck'] = 'true'
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    flavorDimensions "buildType"

    productFlavors {
        vanilla { // Release version
            dimension "buildType"
        }

        wasabi { // Development only version, can be installed along release versions
            applicationId "com.woocommerce.android.dev"
            dimension "buildType"
        }

        jalapeno { // Pre-Alpha version, used for PR builds, can be installed along release and dev versions.
            applicationId "com.woocommerce.android.prealpha"
            dimension "buildType"
        }
    }

    buildTypes {
        release {
            // Proguard is used to shrink our apk, and reduce the number of methods in our final apk,
            // but we don't obfuscate the bytecode.
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            pseudoLocalesEnabled true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
        // see https://github.com/woocommerce/woocommerce-android/pull/3699
        disable "NullSafeMutableLiveData"
        // TODO remove this after we update AGP, it's a bug that has been fixed in 4.1.1 and later
        // see: https://issuetracker.google.com/issues/168794947
        disable "ParcelCreator"
    }

    testOptions {
        animationsDisabled = true
    }
}

dependencies {

    implementation("org.wordpress:libaddressinput.common:$libaddressinputVersion") {
        exclude group: "org.json", module: "json"
        exclude group: "com.google.guava", module: "guava"
    }

    implementation 'com.google.firebase:firebase-messaging:17.0.0'
    implementation 'com.google.android.gms:play-services-auth:15.0.1'

    // Support library
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation ("androidx.browser:browser:1.3.0") {
        exclude group: 'com.google.guava', module: 'listenablefuture'
    }
    implementation "androidx.preference:preference:1.1.1"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    implementation('org.wordpress:utils:1.40.0') {
        exclude group: "com.mcxiaoke.volley"
        exclude group: "com.android.support"
    }

    implementation 'com.github.Automattic:Automattic-Tracks-Android:2.0.1'
    constraints {
        implementation('com.fasterxml.jackson.core:jackson-core:2.10.2') {
            because 'previous version from tracks conflicts with WireMock for UI tests'
        }
    }

    implementation("$gradle.ext.fluxCBinaryPath:fluxc:$fluxCVersion") {
        exclude group: "com.android.support"
        exclude group: "org.wordpress", module: "utils"
    }
    implementation("$gradle.ext.fluxCBinaryPath:woocommerce:$fluxCVersion") {
        exclude group: "com.android.support"
        exclude group: "org.wordpress", module: "utils"
    }

    implementation(project(path: ':libs:login:WordPressLoginFlow')) {
        exclude group: "com.github.wordpress-mobile.WordPress-FluxC-Android", module: "fluxc"
        exclude group: "org.wordpress", module: "utils"
    }

    implementation("com.github.wordpress-mobile.WordPress-Aztec-Android:aztec:$aztecVersion") {
        exclude group: "com.android.volley"
        exclude group: "com.android.support"
        exclude group: "org.wordpress", module: "utils"
    }

    implementation("com.github.wordpress-mobile.WordPress-Aztec-Android:glide-loader:$aztecVersion") {
        exclude group: "com.android.volley"
        exclude group: "com.android.support"
        exclude group: "org.wordpress", module: "utils"
    }

    implementation project(":libs:cardreader")

    implementation 'com.facebook.shimmer:shimmer:0.5.0'
    implementation 'com.github.vihtarb:tooltip:0.2.0'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    // Dagger
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    implementation "com.github.bumptech.glide:volley-integration:$glideVersion@aar"
    implementation "org.greenrobot:eventbus:$eventBusVersion"
    implementation "com.google.android.play:core:$googlePlayCoreVersion"

    // Debug dependencies
    debugImplementation "com.facebook.flipper:flipper:$flipperVersion"
    debugImplementation "com.facebook.soloader:soloader:0.10.1"
    debugImplementation ("com.facebook.flipper:flipper-network-plugin:$flipperVersion") {
        // Force Flipper to use the okhttp version defined in the fluxc module
        // okhttp versions higher than 3.9.0 break handling for self-signed SSL sites
        // See https://github.com/wordpress-mobile/WordPress-FluxC-Android/issues/919
        exclude group: 'com.squareup.okhttp3'
    }
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'

    // Dependencies for local unit tests
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation("androidx.arch.core:core-testing:2.1.0", {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })

    // Dependencies for Espresso UI tests
    androidTestImplementation "androidx.test.ext:junit:$jUnitExtVersion"
    androidTestImplementation "androidx.test:rules:1.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"

    // Dependencies for screenshots
    androidTestImplementation 'tools.fastlane:screengrab:2.0.0'
    androidTestImplementation('com.github.tomakehurst:wiremock:2.26.3') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'org.apache.commons', module: 'commons-lang3'
        exclude group: 'asm', module: 'asm'
        exclude group: 'org.json', module: 'json'
    }
    androidTestImplementation 'org.apache.httpcomponents:httpclient-android:4.3.5.1'

    // Resolve conflicts between main and test APK
    androidTestImplementation "androidx.annotation:annotation:1.1.0"

    implementation "com.zendesk:support:5.0.2"

    // ViewModel and LiveData
    // TODO Try to re-enable NullSafeMutableLiveData lint check when we move to fragment-ktx v1.4.0+
    implementation "androidx.fragment:fragment-ktx:1.3.2"
    implementation "androidx.activity:activity-ktx:1.2.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

    // Use caution when updating these, as commons-text 1.9 caused the reviews tab to crash on API 21
    implementation "org.apache.commons:commons-lang3:3.9"
    implementation "org.apache.commons:commons-text:1.8"

    implementation "com.tinder.statemachine:statemachine:$stateMachineVersion"
}

task copyGoogleServicesExampleFile(type: Copy) {
    from('.')
    into('.')
    include('google-services.json-example')
    rename('google-services.json-example', 'google-services.json')
}

// Add properties named "wc.xxx" to our BuildConfig
android.buildTypes.all { buildType ->
    def inputFile = checkGradlePropertiesFile()
    def properties = loadPropertiesFromFile(inputFile)
    properties.any { property ->
        if (property.key.toLowerCase().startsWith("wc.")) {
            buildType.buildConfigField "String", property.key.replace("wc.", "").replace(".", "_").toUpperCase(),
                    "\"${property.value}\""
        }
        if (property.key.toLowerCase().startsWith("wc.res.")) {
            buildType.resValue "string", property.key.replace("wc.res.", "").replace(".", "_").toLowerCase(),
                    "${property.value}"
        }
    }

    // If Google services file doesn't exist, copy example file.
    if (!file("google-services.json").exists()) {
        tasks.copyGoogleServicesExampleFile.copy()
    }

    // Print warning message if example Google services file is used.
    if ((file("google-services.json").text) == (file("google-services.json-example").text)) {
        println("WARNING: You're using the example google-services.json file. Google login will fail.")
    }
}

task violationCommentsToGitHub(type: se.bjurr.violations.comments.github.plugin.gradle.ViolationCommentsToGitHubTask) {
    repositoryOwner = "woocommerce"
    repositoryName = "woocommerce-android"
    pullRequestId = System.properties['GITHUB_PULLREQUESTID']
    username = System.properties['GITHUB_USERNAME']
    password = System.properties['GITHUB_PASSWORD']
    oAuth2Token = System.properties['GITHUB_OAUTH2TOKEN']
    gitHubUrl = "https://api.github.com/"
    createCommentWithAllSingleFileComments = false
    createSingleFileComments = true
    commentOnlyChangedContent = true
    minSeverity = se.bjurr.violations.lib.model.SEVERITY.INFO //ERROR, INFO, WARN
    commentTemplate = """
**Reporter**: {{violation.reporter}}{{#violation.rule}}\n
**Rule**: {{violation.rule}}{{/violation.rule}}
**Severity**: {{violation.severity}}
**File**: {{violation.file}} L{{violation.startLine}}{{#violation.source}}
**Source**: {{violation.source}}{{/violation.source}}
{{violation.message}}
"""
    violations = [
            ["CHECKSTYLE", ".", ".*/build/.*\\.xml\$", "Checkstyle"]
    ]
}

task printVersionName {
    doLast {
        println android.defaultConfig.versionName
    }
}

def checkGradlePropertiesFile() {
    def inputFile = file("${rootDir}/gradle.properties")
    if (!inputFile.exists()) {
        throw new StopActionException("Build configuration file gradle.properties doesn't exist, follow README instructions")
    }
    return inputFile
}

static def loadPropertiesFromFile(inputFile) {
    def properties = new Properties()
    inputFile.withInputStream { stream ->
        properties.load(stream)
    }
    return properties
}

// For app signing
if (["uploadStoreFile", "uploadStorePassword", "uploadKeyAlias", "uploadKeyPassword"].count { !project.hasProperty(it) } == 0) {
    android {
        signingConfigs {
            release {
                storeFile = rootProject.file(project.uploadStoreFile)
                storePassword = project.uploadStorePassword
                keyAlias = project.uploadKeyAlias
                keyPassword = project.uploadKeyPassword
            }
        }
    }
    android.buildTypes.release.signingConfig = android.signingConfigs.release
}

if (project.hasProperty("debugStoreFile")) {
    def sharedDebugStore = file(project.debugStoreFile.replaceFirst("^~", System.getProperty("user.home")))
    if (sharedDebugStore.exists()) {
        android {
            signingConfigs {
                debug {
                    storeFile sharedDebugStore
                }
            }
        }
    }
}

// Keep this at the bottom (https://stackoverflow.com/a/37565535)
apply plugin: 'com.google.gms.google-services'
